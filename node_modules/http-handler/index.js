if (request == null) var request = require('request');

var userPass;
var mapQuestAPIKey = "Fmjtd%7Cluu82qu1nh%2Cax%3Do5-94y2dy";

// routing to retrieve affiliations from Centralized Database API
var retrieveAffiliationsJSON = function (successCb, failureCb, args) {
  var query = args['query'];

      // Set the headers
    var headers = {
        'Content-type' : 'application/x-www-form-urlencoded',
        'Authorization': 'Basic ' + new Buffer(userPass).toString('base64')
    }

    // Configure the request
    var options = {
        url: "http://199.116.235.47/centralrepo/v1/pull_affiliations",
        headers: headers,
        form: query
    }
    console.log(query)
    // Start the request
    request.post(options, function (error, response, body) {
         // Print out the response body
         successCb(JSON.parse(body));
    })
}

// routing to retrieve articles by keyword from Scopus API
var retrieveDocumentsByTitleJSON = function (successCb, failureCb, args) {
  var keyword = args['keyword'];
    console.log(keyword)
      // Set the headers
    var headers = {
        'Content-type' : 'application/json',
        'Authorization': 'Basic ' + new Buffer(userPass).toString('base64')
    }

    // Configure the request
    var options = {
        url: "http://129.128.184.88/api/getDocumentsByTitle/" + keyword,
        headers: headers,
    }
    console.log(options.url)
    // Start the request
    request.get(options, function (error, response, body) {
         // Print out the response body
          if (!error && response.statusCode == 200) {
            successCb(JSON.parse(body));
          }
          else {
            failureCb(JSON.parse(body), error, response);
          }
    })
}

// routing to retrieve coords of locations from Mapquest AP
var retrieveCoordByLocationJSON = function (successCb, failureCb, args) {
  var locations = JSON.stringify(args['locations']);
  // Configure the request
  var options = {
    url:  "http://open.mapquestapi.com/geocoding/v1/batch?key=" + mapQuestAPIKey + 
    "&outFormat=json&inFormat=json&json=" + locations
  }

  request.get(options, function (error, response, body) {
     // Print out the response body
     successCb(JSON.parse(body));
  })
}

// routing to retrieve institutions by keyword from Scopus API
var retrieveInstitutionJSON = function (successCb, failureCb, args) {
  var keyword = args['keyword'];
    console.log(keyword)
      // Set the headers
    var headers = {
        'Content-type' : 'application/json',
        'Authorization': 'Basic ' + new Buffer(userPass).toString('base64')
    }

    // Configure the request
    var options = {
        url: "http://129.128.184.88/api/getBasicInstitutionInfo/start/0/count/200/" + keyword,
        headers: headers,
    }
    console.log(options.url)
    // Start the request
    request.get(options, function (error, response, body) {
         // Print out the response body
          if (!error && response.statusCode == 200) {
            successCb(JSON.parse(body));
          }
          else {
            failureCb(JSON.parse(body), error, response);
          }
    })
}

var testAuthentication = function (successCb, failureCb, args) {
    var username = args['username'];
    var password = args['password'];
    userPass = username + ":" + password;

    //This should technically never be called
    var successCb2 = function(data) {
        console.log("Valid User/Password");
        successCb();
    }

    var errorCb2 = function(data, error, response) {
      console.log(response.statusCode)
      if (response.statusCode == 401) {
        console.log("Invalid User/Password");
        failureCb();
      }
      else {
        console.log("Valid User/Password");
        successCb();
      }
    }

  retrieveDocumentsByTitleJSON(successCb2, errorCb2, {'keyword': ""});

}

exports.testAuthentication = testAuthentication;
exports.retrieveInstitutionJSON = retrieveInstitutionJSON;
exports.retrieveCoordByLocationJSON = retrieveCoordByLocationJSON;
exports.retrieveDocumentsByTitleJSON = retrieveDocumentsByTitleJSON;
exports.retrieveAffiliationsJSON = retrieveAffiliationsJSON;